{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","currentKey","getCurrentKey","event","setState","key","document","removeEventListener","this","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,MAFhB,EAaEC,cAAgB,SAACC,GACf,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,uDAKE,WACEC,SAASC,oBAAoB,QAASC,KAAKN,iBAN/C,kCASE,WACEI,SAASC,oBAAoB,QAASC,KAAKN,iBAV/C,oBAiBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,mBAAGQ,UAAU,eAAb,SACGD,KAAKR,MAAMC,WAAX,mCAC+BA,EAD/B,KAEG,gCAxBZ,GAAyBS,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.5d4c00aa.chunk.js","sourcesContent":["import React from 'react';\n\ninterface State {\n  currentKey: string | null;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    currentKey: null,\n  };\n\n  componentDidMount() {\n    document.removeEventListener('keyup', this.getCurrentKey);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.getCurrentKey);\n  }\n\n  getCurrentKey = (event: KeyboardEvent) => {\n    this.setState({ currentKey: event.key });\n  };\n\n  render() {\n    const { currentKey } = this.state;\n\n    return (\n      <p className=\"App__message\">\n        {this.state.currentKey\n          ? `The last pressed key is [${currentKey}]`\n          : 'Nothing was pressed yet' }\n      </p>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}